/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type Timestamp = Uint64;
export type Uint64 = string;
export type Uint128 = string;
export type Addr = string;
export type Identifier = string;
export interface InstantiateMsg {
  base_decimals?: number | null;
  base_denom: string;
  base_symbol: string;
  expiry: Timestamp;
  fee_perc: Uint128;
  fee_perc_denom?: Uint128 | null;
  min_order_quantity: Uint128;
  min_tick_base: Uint128;
  min_tick_quote: Uint128;
  owner: Addr;
  pyth_base_price_feed: Identifier;
  pyth_contract_addr: Addr;
  quote_decimals?: number | null;
  quote_denom: string;
  quote_symbol: string;
  strike_price: Uint128;
}
export type ExecuteMsg =
  | {
      update_config: {
        new_config: Config;
      };
    }
  | {
      ask_order: {
        price: Uint128;
        quantity: Uint128;
      };
    }
  | {
      bid_order: {
        price: Uint128;
        quantity: Uint128;
      };
    }
  | {
      cancel_bid_order: {
        price: Uint128;
        quantity: Uint128;
      };
    }
  | {
      cancel_ask_order: {
        price: Uint128;
        quantity: Uint128;
      };
    }
  | {
      close_long_position_order: {
        price: Uint128;
        quantity: Uint128;
      };
    }
  | {
      close_short_position_order: {
        price: Uint128;
        quantity: Uint128;
      };
    }
  | {
      exercise: {
        expiry_price?: Uint128 | null;
      };
    };
export interface Config {
  base_decimals: number;
  base_denom: string;
  base_symbol: string;
  expiry: Timestamp;
  fee_perc: Uint128;
  fee_perc_denom: Uint128;
  instantiated: Timestamp;
  min_order_quantity_in_base: Uint128;
  min_tick_base: Uint128;
  min_tick_quote: Uint128;
  owner: Addr;
  pyth_base_price_feed: Identifier;
  pyth_contract_addr: Addr;
  quote_decimals: number;
  quote_denom: string;
  quote_symbol: string;
  strike_price_in_quote: Uint128;
}
export type QueryMsg =
  | {
      config: {};
    }
  | {
      bids: {
        price?: Uint128 | null;
        sender?: Addr | null;
      };
    }
  | {
      asks: {
        price?: Uint128 | null;
        sender?: Addr | null;
      };
    }
  | {
      locked_amount: {
        owner: Addr;
      };
    }
  | {
      position: {
        owner: Addr;
      };
    };
export type ArrayOfOrdersResponse = OrdersResponse[];
export interface OrdersResponse {
  orders: OrderBookItem[];
  price: Uint128;
}
export interface OrderBookItem {
  is_closing: boolean;
  owner: Addr;
  quantity_in_base: Uint128;
}
export interface LockedAmountResponse {
  locked_base_denom: Uint128;
  locked_quote_denom: Uint128;
}
export type PositionResponse = Position;
export type Int128 = string;
export type PositionState = "open" | "settled";
export type Settlement = "i_t_m" | "o_t_m";
export interface Position {
  position_closing_in_orderbook_in_base: Int128;
  position_in_base: Int128;
  settled?: PositionState | null;
  settlement?: Settlement | null;
}
